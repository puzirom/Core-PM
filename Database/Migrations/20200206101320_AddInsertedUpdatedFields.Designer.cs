// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20200206101320_AddInsertedUpdatedFields")]
    partial class AddInsertedUpdatedFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaymentMatching.Entities.Structure.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Inserted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kid")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OrgNoClient")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("RecNo")
                        .HasColumnType("int");

                    b.Property<int>("SourceSystemId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("PaymentMatching.Entities.Structure.DocumentTypeItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Undefined"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Invoice"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Reminder"
                        });
                });

            modelBuilder.Entity("PaymentMatching.Entities.Structure.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("References");
                });

            modelBuilder.Entity("PaymentMatching.Entities.Structure.ReferenceTypeItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ReferenceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "InvoiceNumber"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ReminderNumber"
                        },
                        new
                        {
                            Id = 3,
                            Name = "CreditInvoiceNumber"
                        },
                        new
                        {
                            Id = 4,
                            Name = "OrderNumber"
                        },
                        new
                        {
                            Id = 5,
                            Name = "CustomerNumber"
                        },
                        new
                        {
                            Id = 6,
                            Name = "InvoiceRecNo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "ConsolidatedInvoiceRecNo"
                        });
                });

            modelBuilder.Entity("PaymentMatching.Entities.Structure.Reference", b =>
                {
                    b.HasOne("PaymentMatching.Entities.Structure.Document", "Document")
                        .WithMany("References")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
